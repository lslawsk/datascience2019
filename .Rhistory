labs(title = "Average Biketown Ride Distance by Week",
subtitle = "July 2018",
caption = "source: Biketown") +
xlab("Week Of") + ylab("Average Miles") +
theme_bw()
plot1
mean_wkdist <- bike_wkagg %>%
filter(Source %in% c("2018_06.csv")) %>%
group_by(week.datetime) %>%
summarize(wk_mean_dist = mean(Distance_Miles))
plot1 <- ggplot(mean_wkdist, aes(week.datetime, wk_mean_dist,
fill = week.datetime)) +
geom_bar(stat = "identity") +
labs(title = "Average Biketown Ride Distance by Week",
subtitle = "July 2018",
caption = "source: Biketown") +
xlab("Week Of") + ylab("Average Miles") +
theme_bw()
plot1
plot1 <- ggplot(mean_wkdist, aes(week.datetime, wk_mean_dist)) +
geom_bar(stat = "identity") +
labs(title = "Average Biketown Ride Distance by Week",
subtitle = "July 2018",
caption = "source: Biketown") +
xlab("Week Of") + ylab("Average Miles") +
theme_bw()
plot1
plot1 <- ggplot(mean_wkdist, aes(week.datetime, wk_mean_dist)) +
geom_bar(stat = "identity") +
labs(title = "Average Biketown Ride Distance by Week",
subtitle = "July 2018",
caption = "source: Biketown") +
xlab("Week Of") + ylab("Average Miles") +
scale_fill_manual("legend", values = "blue") +
theme_bw()
plot1
plot1 <- ggplot(mean_wkdist, aes(week.datetime, wk_mean_dist)) +
geom_bar(stat = "identity", fill = "blue") +
labs(title = "Average Biketown Ride Distance by Week",
subtitle = "July 2018",
caption = "source: Biketown") +
xlab("Week Of") + ylab("Average Miles") +
scale_x_date(date_breaks = "1 week") +
theme_bw()
plot1
plot1 <- ggplot(mean_wkdist, aes(week.datetime, wk_mean_dist)) +
geom_bar(stat = "identity", fill = "blue") +
labs(title = "Average Biketown Ride Distance by Week",
subtitle = "July 2018",
caption = "source: Biketown") +
xlab("Week Of") + ylab("Average Miles") +
scale_x_date(date_breaks = "1 week") +
theme_bw()
plot1
plot1 <- ggplot(mean_wkdist, aes(week.datetime, wk_mean_dist)) +
geom_bar(stat = "identity", fill = "blue") +
labs(title = "Average Biketown Ride Distance by Week",
subtitle = "July 2018",
caption = "source: Biketown") +
ylab("Average Miles") +
scale_x_date(date_breaks = "1 week") +
plot1
plot1 <- ggplot(mean_wkdist, aes(week.datetime, wk_mean_dist)) +
geom_bar(stat = "identity", fill = "blue") +
labs(title = "Average Biketown Ride Distance by Week",
subtitle = "July 2018",
caption = "source: Biketown") +
scale_x_date(date_breaks = "1 week") +
plot1
plot1 <- ggplot(mean_wkdist, aes(week.datetime, wk_mean_dist)) +
geom_bar(stat = "identity", fill = "blue") +
labs(title = "Average Biketown Ride Distance by Week",
subtitle = "July 2018",
caption = "source: Biketown") +
xlab("Week Of") + ylab("Average Miles") +
theme_bw()
plot1
plot1 <- ggplot(mean_wkdist, aes(week.datetime, wk_mean_dist)) +
geom_bar(stat = "identity", fill = "blue") +
labs(title = "Average Biketown Ride Distance by Week",
subtitle = "July 2018",
caption = "source: Biketown") +
scale_x_date(date_breaks = "1 week") +
theme_bw()
plot1
plot1 <- ggplot(mean_wkdist, aes(week.datetime, wk_mean_dist)) +
geom_bar(stat = "identity", fill = "blue") +
labs(title = "Average Biketown Ride Distance by Week",
subtitle = "July 2018",
caption = "source: Biketown") +
scale_x_date(date_breaks = "1 week") +
plot1
plot1 <- ggplot(mean_wkdist, aes(week.datetime, wk_mean_dist)) +
geom_bar(stat = "identity", fill = "blue") +
labs(title = "Average Biketown Ride Distance by Week",
subtitle = "July 2018",
caption = "source: Biketown") +
xlab("Week Of") + ylab("Average Miles") +
theme_bw()
plot1
plot1 <- ggplot(mean_wkdist, aes(as.Date(week.datetime), wk_mean_dist)) +
geom_bar(stat = "identity", fill = "blue") +
labs(title = "Average Biketown Ride Distance by Week",
subtitle = "July 2018",
caption = "source: Biketown") +
xlab("Week Of") + ylab("Average Miles") +
theme_bw()
plot1
plot1 <- ggplot(mean_wkdist, aes(as.Date(week.datetime), wk_mean_dist)) +
geom_bar(stat = "identity", fill = "blue") +
labs(title = "Average Biketown Ride Distance by Week",
subtitle = "July 2018",
caption = "source: Biketown") +
xlab("Week Of") + ylab("Average Miles") +
scale_x_date(date_breaks = "1 week") +
theme_bw()
plot1
plot1 <- ggplot(mean_wkdist, aes(as.Date(week.datetime), wk_mean_dist)) +
geom_bar(stat = "identity", fill = "orange") +
labs(title = "Average Biketown Ride Distance by Week",
subtitle = "July 2018",
caption = "source: Biketown") +
xlab("Week Of") + ylab("Average Miles") +
scale_x_date(date_breaks = "1 week") +
theme_bw()
plot1
mean_wkdist <- bike_wkagg %>%
filter(Source %in% c("2018_06.csv","2018_07.csv","2018_08.csv","2018_09.csv")) %>%
group_by(week.datetime) %>%
summarize(wk_mean_dist = mean(Distance_Miles))
plot1 <- ggplot(mean_wkdist, aes(as.Date(week.datetime), wk_mean_dist)) +
geom_bar(stat = "identity", fill = "orange") +
labs(title = "Average Biketown Ride Distance by Week",
subtitle = "July-Sept 2018",
caption = "source: Biketown") +
xlab("Week Of") + ylab("Average Miles") +
scale_x_date(date_breaks = "1 week") +
theme_bw()
plot1
plot1 <- ggplot(mean_wkdist, aes(as.Date(week.datetime), wk_mean_dist)) +
geom_bar(stat = "identity", fill = "orange") +
labs(title = "Average Biketown Ride Distance by Week",
subtitle = "July-Sept 2018",
caption = "source: Biketown") +
xlab("Week Of") + ylab("Average Miles") +
scale_x_date(date_breaks = "1 week") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme_bw()
plot1
plot1 <- ggplot(mean_wkdist, aes(as.Date(week.datetime), wk_mean_dist)) +
geom_bar(stat = "identity", fill = "orange") +
labs(title = "Average Biketown Ride Distance by Week",
subtitle = "July-Sept 2018",
caption = "source: Biketown") +
xlab("Week Of") + ylab("Average Miles") +
scale_x_date(date_breaks = "1 week") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme_bw()
plot1
plot1 <- ggplot(mean_wkdist, aes(as.Date(week.datetime), wk_mean_dist)) +
geom_bar(stat = "identity", fill = "orange") +
labs(title = "Average Biketown Ride Distance by Week",
subtitle = "July-Sept 2018",
caption = "source: Biketown") +
xlab("Week Of") + ylab("Average Miles") +
scale_x_date(date_breaks = "1 week") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme_bw()
plot1
knitr::opts_chunk$set(echo = TRUE)
getwd()
library(readxl)
library(lubridate)
library(dplyr)
library(readr)
input_file <- "data/Hawthorne Tilikum Steel daily bike counts 073118.xlsx"
bridge_names <- c("Hawthorne", "Tilikum", "Steel")
# define a function that loads excel sheets
load_data <- function(bridge_name, input_file){
bikecounts <- read_excel(input_file, sheet = bridge_name,
skip = 1) %>%   # skips first row
filter(total > 0) %>%
select(date, total) %>%
mutate(bridge = bridge_name,
date = as.Date(date))  # drops unneeded time
}
h <- load_data("Hawthorne", input_file)
input_file <- "data/Hawthorne Tilikum Steel daily bike counts 073118.xlsx"
bridge_names <- c("Hawthorne", "Tilikum", "Steel")
# define a function that loads excel sheets
load_data <- function(bridge_name, input_file){
bikecounts <- read_excel(input_file, sheet = bridge_name,
skip = 1) %>%   # skips first row
filter(total > 0) %>%
select(date, total) %>%
mutate(bridge = bridge_name,
date = as.Date(date))   # drops unneeded time
}
h <- load_data("Hawthorne", input_file)
bikecounts <- lapply(bridge_names, load_data,
input_file = input_file) %>%
bind_rows()
View(bikecounts)
View(bikecounts)
# factorize bridge name, since here it makes sense
bikecounts <- bikecounts %>% mutate(bridge = factor(bridge))
head(bikecounts)
# read in weather data
wx <- read_csv("data/NCDC-CDO-USC00356750.csv")
# read in weather data
wx <- read_csv("data/NCDC-CDO-USC00356750.csv")
head(wx)
# getwd()
source("code/load_counts_for_rmd-sac.R")
library(lubridate)
library(ggplot2)
library(modelr)
library(purrr)
library(broom)
bikecounts_wx <- bikecounts %>%
left_join(wx, by = c("data" = "DATE")) %>%
select(date, bridge, total, TMIN, TMAX, PRCP)
library(dplyr)
bikecounts_wx <- bikecounts %>%
left_join(wx, by = c("data" = "DATE")) %>%
select(date, bridge, total, TMIN, TMAX, PRCP)
bikecounts_wx <- bikecounts %>%
left_join(wx, by = c("date" = "DATE")) %>%
select(date, bridge, total, TMIN, TMAX, PRCP)
ggplot(bikecounts_wx, aes(date, total),
group = bridge, color = bridge) +
geom_line()
ggplot(bikecounts_wx, aes(date, total,
group = bridge, color = bridge)) +
geom_line()
ggplot(bikecounts_wx, aes(date, total,
group = bridge, color = bridge)) +
geom_line() +
theme_bw()
bikecounts_wx %>%  ggplot(bikecounts_wx, aes(date, total,
group = bridge, color = bridge)) +
geom_line() + facet_wrap(bridge ~.) +
theme_bw()
bikecounts_wx %>%  ggplot(aes(date, total,
group = bridge, color = bridge)) +
geom_line() + facet_wrap(bridge ~.) +
theme_bw()
bikecounts_wx %>%  ggplot(aes(date, total,
group = bridge, color = bridge)) +
geom_line() + facet_grid(bridge ~.) +
theme_bw()
bikecounts_wx %>%  ggplot(aes(date, total,
group = bridge, color = bridge)) +
geom_line() + facet_grid(bridge ~.) +
theme_bw() + ylim(0, 10000)
bikecounts_wx %>%
group_by(bridge) %>%
summarize(avg_d_counts = mean(total))
bikecounts_wx %>%
group_by(bridge, month(date), year(date)) %>%
summarize(avg_m_counts = mean(total)) %>%
View()
bikecounts_wx %>%
group_by(bridge, month(date)) %>%
summarize(avg_m_counts = mean(total)) %>%
View()
bikecounts_wx %>%
group_by(bridge, month(date), year(date)) %>%
summarize(avg_m_counts = mean(total)) %>%
View()
avg_m <- bikecounts_wx %>%
group_by(bridge, month(date, label = T)) %>%
summarize(avg_m_counts = mean(total))
View(avg_m)
View(avg_m)
View(avg_m)
View(avg_m)
avg_m <- bikecounts_wx %>%
group_by(bridge, month = month(date, label = T)) %>%
summarize(avg_m_counts = mean(total))
avg_m <- bikecounts_wx %>%
group_by(bridge, month = month(date, label = T)) %>%
summarize(avg_daily_counts = mean(total))
ggplot(avg_m, aes(month, avg_daily_counts,
color = bridge)) +
geom_point()
avg_m <- bikecounts_wx %>%
group_by(bridge, month = month(date, label = T)) %>%
summarize(avg_daily_counts = mean(total)) %>%
as.data.frame()
ggplot(avg_m, aes(month, avg_daily_counts,
color = bridge)) +
geom_point()+
theme_bw()
ggplot(avg_m, aes(month, avg_daily_counts,
color = bridge)) +
geom_point(size = 2)+
theme_bw()
fit <- lm(total ~ TMIN + TMAX + PRCP + bridge,
data = bikecounts_wx)
str(fit)
summary(fit)
plot(fit)
fit2 <- lm(log(total) ~ TMIN + TMAX + PRCP + bridge,
data = bikecounts_wx)
summary(fit2)
plot(fit2)
lm(total ~ TMIN + I(TMAX^2) + PRCP + bridge,
data = bikecounts_wx) %>% summary()
lm(total ~ TMIN + I(TMAX^2) + PRCP + bridge,
data = bikecounts_wx) %>% summary()
lm(total ~ TMIN + TMAX + PRCP + bridge,
data = bikecounts_wx) %>% summary()
# variable
lm(total ~ TMIN + I(TMAX^2) + PRCP + bridge,
data = bikecounts_wx) %>% summary()
fit_poly <- lm(total ~ TMIN + I(TMAX^2) + PRCP + bridge,
data = bikecounts_wx)
summary(fit_poly)
fit_poly <- lm(total ~ TMIN + TMAX+ I(TMAX^2) + PRCP + bridge,
data = bikecounts_wx)
summary(fit_poly)
str(coef(fit_poly))
fit_poly <- lm(total ~ TMIN + TMAX + I(TMAX^2) + PRCP + bridge,
data = bikecounts_wx)
summary(fit_poly)
str(coef(fit_poly)) # could access coefs here by name or position
coef(fit_poly)
f <- function(x) {
198 * x + -0.99  x^2 # from regression result
f <- function(x) {198 * x + -0.99  x^2} # from regression result
coef(fit_poly)
f <- function(x) {198 * x + -0.99 * x^2} # from regression result
p <- ggplot(data = data.frame(x = 0),
mapping = aes(x = x))
p + stat_function(fun = f, color = "lightblue", size = 2) +
xlim(0, 110)
p + stat_function(fun = f, color = "lightblue", size = 2) +
xlim(0, 110) + xlab("deg F")
p + stat_function(fun = f, color = "lightblue", size = 2) +
xlim(0, 110) + xlab("deg F") + ylab("count")
p + stat_function(fun = f, color = "purple", size = 2) +
xlim(0, 110) + xlab("deg F") + ylab("count")
p + stat_function(fun = f, color = "darkgreen", size = 2) +
xlim(0, 110) + xlab("deg F") + ylab("count")
p + stat_function(fun = f, color = "darkgreen", size = 1) +
xlim(0, 110) + xlab("deg F") + ylab("count")
bikecounts_wx <- bikecounts_wx %>%
add_predictions(fit_poly) %>%
mutate(pred = pred)
head(bikecounts_wx)
bikecounts_wx <- bikecounts_wx %>%
add_predictions(fit_poly) %>%
add_residuals(fit_poly) %>%
mutate(pred = pred)
head(bikecounts_wx)
ggplot() +
geom_line(data = bikecounts_wx, aes(date, total),
color = "salmon") +
geom_line(date = bikcounts_wx, aes(date, pred),
color = "blue") +
facet_grid(bridge ~ .) +
ylim(c(0,10000))
ggplot() +
geom_line(data = bikecounts_wx, aes(date, total),
color = "salmon") +
geom_line(date = bikecounts_wx, aes(date, pred),
color = "blue") +
facet_grid(bridge ~ .) +
ylim(c(0,10000))
bikecounts_wx <- bikecounts_wx %>%
add_predictions(fit_poly) %>%
add_residuals(fit_poly) %>%
mutate(pred = pred)
head(bikecounts_wx)
ggplot() +
geom_line(data = bikecounts_wx, aes(date, total),
color = "salmon") +
geom_line(date = bikecounts_wx, aes(date, pred),
color = "blue") +
facet_grid(bridge ~ .) +
ylim(c(0,10000))
bikecounts_wx <- bikecounts_wx %>%
add_predictions(fit_poly) %>%
add_residuals(fit_poly) %>%
mutate(pred = pred, resid = resid)
head(bikecounts_wx)
ggplot() +
geom_line(data = bikecounts_wx, aes(date, total),
color = "salmon") +
geom_line(date = bikecounts_wx, aes(date, pred),
color = "blue") +
facet_grid(bridge ~ .) +
ylim(c(0,10000))
bikecounts_wx <- bikecounts_wx %>%
add_predictions(fit_poly) %>%
add_residuals(fit_poly) %>%
mutate(pred = pred, resid = resid)
head(bikecounts_wx)
ggplot() +
geom_line(data = bikecounts_wx, aes(date, total),
color = "salmon") +
geom_line(data = bikecounts_wx, aes(date, pred),
color = "blue") +
facet_grid(bridge ~ ., scales = "free") +
ylim(c(0,10000))
ggplot() +
geom_line(data = bikecounts_wx, aes(date, total),
color = "grey") +
geom_line(data = bikecounts_wx, aes(date, pred),
color = "blue") +
facet_grid(bridge ~ ., scales = "free") +
ylim(c(0,10000))
ggplot() +
geom_line(data = bikecounts_wx, aes(date, total),
color = "darkgrey") +
geom_line(data = bikecounts_wx, aes(date, pred),
color = "blue") +
facet_grid(bridge ~ ., scales = "free") +
ylim(c(0,10000))
ggplot() +
geom_line(data = bikecounts_wx, aes(date, total),
color = "darkgrey") +
geom_line(data = bikecounts_wx, aes(date, pred),
color = "blue") +
facet_grid(bridge ~ ., scales = "free") +
ylim(c(0,10000)) + theme_bw()
library(tidyr)
bw_nested <- bikecounts_wx %>%
group_by(bridge) %>%
nest()
str(bw_nested)
View(bw_nested)
bw_nested <- bikecounts_wx %>%
group_by(bridge) %>%
nest()
View(bw_nested)
# fit to single bridge
lm(total ~ TMIN + TMAX + PRCP + bridge,
data = bw_nested[[1, "data"]]) %>%
summary()
# fit to single bridge
lm(total ~ TMIN + TMAX + PRCP,
data = bw_nested[[1, "data"]]) %>%
summary()
fit_func <- function(df){
lm(total ~ TMIN + TMAX + PRCP,
data = df)
}
fit_func(bw_nested[[1, "data"]])
# two at a time through tidyverse
fits <- purrr::map(bw_nested$data[1:2],
fit_func)
fits
str(fits)
# three at a time
bw_nested <- bw_nested %>%
mutate(fit = purrr::map(data, fit_func),
tidy = purrr::map(fit, tidy),
glance = purrr::map(fit, glance))
str(bw_nested)
# unpack/unnest or combine results
broom::tidy(bw_nested$fit[[1]])
# unpack for all 3
bw_nested %>%
unnest(glance) %>%
arrange(desc(r.squared))
bw_nested %>%
select(bridge, tidy) %>%
unnest(tidy) %>%
arrange(term, estimate, bridge)
bw_nested %>%
select(bridge, tidy) %>%
unnest(tidy) %>%
arrange(term, estimate, bridge) %>%
View()
fit_func2 <- function(df){
lm(log(total) ~ TMIN + TMAX + PRCP,
data = df)
}
bw_nested <- bikecounts_wx %>%
group_by(bridge) %>%
nest()
# three at a time using fit_func
bw_nested <- bw_nested %>%
mutate(fit = purrr::map(data, fit_func2),
tidy = purrr::map(fit, tidy),
glance = purrr::map(fit, glance))
bw_nested %>%
select(bridge, tidy) %>%
unnest(tidy) %>%
arrange(term, estimate, bridge) %>%
bw_nested %>%
select(bridge, tidy) %>%
unnest(tidy) %>%
arrange(term, estimate, bridge) %>%
View()
bw_nested <- bikecounts_wx %>%
group_by(bridge) %>%
nest()
lm(log(total) ~ TMIN + TMAX + PRCP,
data = df)
# three at a time using fit_func
bw_nested <- bw_nested %>%
mutate(fit = purrr::map(data, fit_func2),
tidy = purrr::map(fit, tidy),
glance = purrr::map(fit, glance))
bw_nested %>%
select(bridge, tidy) %>%
unnest(tidy) %>%
arrange(term, estimate, bridge) %>%
View()
