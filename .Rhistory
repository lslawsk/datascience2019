# plotting Biketown data with base R
install.packages(tidyverse)
# plotting Biketown data with base R
install.packages("tidyverse")
library(tidyverse)
# read in data
biketown <- read.csv("data/biketown-2018-trips.csv")
str(biketown)
summary(biketown)
library(lubridate)
# add column to dataset that is hour of the day
biketown$hour <-
hms(biketown$StartTime) %>% # creates time it can work with
hour() # hour
table(biketown$hour)
freq_by_hour <- table(biketown$hour)
barplot(freq_by_hour)
stime <- hms(biketown$StartTime)
biketown$hour <- hour(stime)
freq_by_hour <- table(biketown$hour)
barplot(freq_by_hour) # bar chart to visualize for quick answer
hist(biketown$hour) # histogram by hour
hist(biketown$hour, breaks = seq(0, 24, 3)) # histogram by 3 hour blocks
am_peak <- subset(biketown, hour >= 7 & hour < 10) # focus on morning peak
hist(am_peak$hour) # histogram of morning peak
hist(am_peak$hour, breaks = seq(7, 10, 1)) # histogram of morning peak
barplot(table(am_peak$hour)) # bar chart of morning peak
freq_by_month <- table(biketown$month) # monthly
barplot(freq_by_month)
# in tidyverse for month organization
biketown$month <-
mdy(biketown$StartDate) %>%
month(label = T, abbr = T) # label months so not numbers and abbreviate
freq_by_month <- table(biketown$month) # monthly
barplot(freq_by_month) # bar chart to visualize for quick answer
# investigating stations
freq_by_station <- table(biketown$StartHub)
station_sort <- sort(freq_by_station, decreasing = T)[1:25] # subset of top 25 sorted
dotchart(station_sort)
# Intro to dplyr
library(dplyr)
# load gapminder data as sample dataset
gapminder <- read.csv("data/gapminder.csv")
# load gapminder data as sample dataset
gapminder <- read.csv("data/gapminder_data.csv")
mean(gapminder[gapminder$continent == "Africa", "gdpPercap"]) # mean GDP per capita for Africa
# attributes in gapminder
colnames(gapminder)
# select three attributes
subset_1 <- gapminder %>%
select(country, continent, lifeExp)
# select every attribute except two
subset_2 <- gapminder %>%
select(-lifeExp, -pop)
str(subbset_2)
str(subset_2)
# select some attributes but rename a few for clarity
subset_3 <- gapminder %>%
select(country, population = pop, lifeExp, gdp = gdpPercap)
str(subset_3)
# filter use
africa <- gapminder %>%
filter(continent == "Africa") %>%
select(country, population = pop, lifeExp)
View(africa)
View(africa)
table(africa$country)
View(africa)
View(africa)
gapminder <- read.csv("data/gapminder_data.csv",
stringsAsFactors = F) # no factors (levels), just text
# to change back to factors use below and check
# gapminder$continent <- as.factor(gapminder$continent)
# is.factor(gapminder$continent)
# mean GDP per capita for Africa in base R
mean(gapminder[gapminder$continent == "Africa", "gdpPercap"])
# dplyr functions we will learn: select(), filter(), group_by(), summarize(), mutate()
# Pipe function to get there faster %>%. in dplyr.
# shortcut for %>%: control, shift, m
# shortcut for <-: control, -
# attributes in gapminder
colnames(gapminder)
# select use
# select three attributes
subset_1 <- gapminder %>%
select(country, continent, lifeExp)
# select every attribute except two
subset_2 <- gapminder %>%
select(-lifeExp, -pop)
str(subset_2)
# select some attributes but rename a few for clarity
subset_3 <- gapminder %>%
select(country, population = pop, lifeExp, gdp = gdpPercap)
str(subset_3)
# filter use
africa <- gapminder %>%
filter(continent == "Africa") %>%
select(country, population = pop, lifeExp)
table(africa$country) # if factors were on (changed above) then would show other countries as 0
europe <- gapminder %>%
filter(continent == "Europe") %>%
select(country, year, population = pop)
View(europe)
View(europe)
View(europe)
View(europe)
africa_countryList <- table(africa$country)
view(africa_countryList)
View(africa_countryList)
View(europe)
View(europe)
# group and summarize use
str(gapminder %>% group_by(continent))
#summarize gdp by continent
gdp_continent <- gapminder %>%
group_by(continent) %>%
summarize(mean_gdp = mean(gdpPercap))
View(gdp_continent)
library(ggplot2)
#summarize gdp by continent
gdp_continent <- gapminder %>%
group_by(continent) %>%
summarize(mean_gdp = mean(gdpPercap),
mean_life = mean(lifeExp))
View(gdp_continent)
View(gdp_continent)
summary_plot <- gdp_continent %>%
ggplot(aes(x = mean_gdp, y = mean_life)) +
geom_bar(stat = "identity") +
theme_bw()
summary_plot
summary_plot <- gdp_continent %>%
ggplot(aes(x = mean_gdp, y = mean_life)) +
geom_point(stat = "identity") +
theme_bw()
summary_plot
# mean pop for continents
pop_continent <- gapminder %>%
group_by(continent) %>%
summarize(mean_pop = mean(pop))
View(pop_continent)
View(pop_continent)
summary_plot <- gdp_continent %>%
ggplot(aes(x = mean_gdp, y = mean_life, label = continent)) +
geom_point(stat = "identity") + geom_text(aes(label = continent),hjust=0, vjust=0)
summary_plot
summary_plot <- gdp_continent %>%
ggplot(aes(x = mean_gdp, y = mean_life, label = continent)) +
geom_point(stat = "identity") + geom_text(aes(label = continent),hjust=1, vjust=1)
summary_plot
summary_plot <- gdp_continent %>%
ggplot(aes(x = mean_gdp, y = mean_life, label = continent)) +
geom_point(stat = "identity") + geom_text(aes(label = continent),hjust=-1, vjust=1)
summary_plot
summary_plot <- gdp_continent %>%
ggplot(aes(x = mean_gdp, y = mean_life, label = continent)) +
geom_point(stat = "identity") + geom_text(aes(label = continent),hjust=0.5, vjust=1)
summary_plot
summary_plot <- gdp_continent %>%
ggplot(aes(x = mean_gdp, y = mean_life, label = continent)) +
geom_point(stat = "identity") + geom_text(aes(label = continent),hjust=-0.5, vjust=1)
summary_plot
summary_plot <- gdp_continent %>%
ggplot(aes(x = mean_gdp, y = mean_life, label = continent)) +
geom_point(stat = "identity") + geom_text(aes(label = continent),hjust=0, vjust=1)
theme_bw()
summary_plot
summary_plot <- gdp_continent %>%
ggplot(aes(x = mean_gdp, y = mean_life, label = continent)) +
geom_point(stat = "identity") + geom_text(aes(label = continent),hjust=0, vjust=-1)
theme_bw()
summary_plot
summary_plot <- gdp_continent %>%
ggplot(aes(x = mean_gdp, y = mean_life, label = continent)) +
geom_point(stat = "identity") + geom_text(aes(label = continent),hjust=0, vjust=-0.5)
theme_bw()
summary_plot
summary_plot <- gdp_continent %>%
ggplot(aes(x = mean_gdp, y = mean_life, label = continent)) +
geom_point(stat = "identity") + geom_text(aes(label = continent),hjust=0.5, vjust=-0.5)
theme_bw()
summary_plot
summary_plot <- gdp_continent %>%
ggplot(aes(x = mean_gdp, y = mean_life, label = continent)) +
geom_point(stat = "identity") + geom_text(aes(label = continent),hjust=1, vjust=-0.5)
theme_bw()
summary_plot
summary_plot <- gdp_continent %>%
ggplot(aes(x = mean_gdp, y = mean_life, label = continent)) +
geom_point(stat = "identity") + geom_text(aes(label = continent),hjust=0, vjust=-0.5)
theme_bw()
summary_plot
# count() use and n() use
gapminder %>%
filter(year == 2002) %>%
count(continent, sort = TRUE)
# n() use
gapminder %>%
group_by(continent) %>%
summarize(se = sd(lifeExp)/sqrt(n()))
# mutate() use
# adds column for every observation
xy <- data.frame(x = rnorm(100),
y = rnorm(100))
head(xy)
# adding to original data frame
xyz <- xy %>%
mutate(z = x * y)
head(xyz)
gdpfull <- gapminder %>%
mutate(col = pop * gdpPercap) %>%
group_by(continent) %>%
summarize(gdp_perCont = sum(fullgdp))
fullgdp <- gapminder %>%
mutate(fullgdp = pop * gdpPercap) %>%
group_by(continent) %>%
summarize(gdp_perCont = sum(fullgdp))
View(gdp_continent)
View(gdp_continent)
View(pop_continent)
View(pop_continent)
View(gdp_continent)
View(gdp_continent)
fullgdp <- gapminder %>%
mutate(fullgdp = pop * gdpPercap)
head(fullgdp)
fullgdp <- gapminder %>%
mutate(full_gdp = pop * gdpPercap)
head(fullgdp)
gdp_perCont <- gapminder %>%
mutate(fullgdp_perCont = pop * gdpPercap) %>%
group_by(continent) %>%
summarize(full_gdp_Cont = sum(full_gdp))
fullgdp <- gapminder %>%
mutate(full_gdp = pop * gdpPercap)
head(fullgdp)
gdp_perCont <- gapminder %>%
mutate(fullgdp_perCont = pop * gdpPercap) %>%
group_by(continent) %>%
summarize(full_gdp_Cont = sum(full_gdp))
gdp_perCont <- gapminder %>%
mutate(full_gdp = pop * gdpPercap) %>%
group_by(continent) %>%
summarize(full_gdp_Cont = sum(full_gdp))
View(fullgdp)
View(fullgdp)
View(gdp_perCont)
View(gdp_perCont)
gdp_perCont
