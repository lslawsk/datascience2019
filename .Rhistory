make_url <- function(date, base_url) {
url <- paste0(base_url,format(date, "%Y_%m"), ".csv")
return(url)
}
# parse date range
start_date <- lubridate::myd(start, truncated = 2)
end_date <- lubridate::myd(end, truncated = 2)
date_range <- seq(start_date, end_date, by = "months")
# use apply functions instead of for loops
# lapply(a, b) applies a function b to a sequence a and returns list of modified seq.
# urls <- lapply(date_range, make_url, base_url = base_url)
# 3 different ways to do the same thing, 1) and 2) use urls from above
# 1) for loop over named list of urls; can be easier for early devel. since more readable
# for(u in urls) {
#   download.file(u, destfile = paste0(outdir,
#                                      str_sub(u, -11)))
# }
# 2) as apply with inline function
# result <- lapply(urls, function(u) {
#   download.file(u, destfile = paste0(outdir, str_sub(u, -11)))
# })
# 3) tidy piped function that combines creating urls to download files
lapply(date_range, make_url, base_url = base_url) %>%
lapply(function(u) {download.file(u, destfile = paste0(outdir,
str_sub(u, -11)))
})
}
get_data(start)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(lubridate)
library(ggplot2)
bike_1807 <- read.csv("data/biketown/2018_07.csv", stringsAsFactors = F)
str(bike_1807)
colnames(bike_1807)
mean_by_plan
mean_by_plan <- bike_1807 %>%
group_by(PaymentPlan) %>%
summarize(mean_mi = mean(Distance_Miles))
mean_by_plan
View(mean_by_plan)
View(mean_by_plan)
?ggplot
?ggplot
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(lubridate)
library(ggplot2)
install.packages("DataTable")
library(DataTable)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(lubridate)
library(ggplot2)
install.packages("DT")
library(DT)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(lubridate)
library(ggplot2)
install.packages("DT")
library(DT)
install.packages("DT")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(lubridate)
library(ggplot2)
install.packages("DT")
library(DT)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(lubridate)
library(ggplot2)
bike_1807 <- read.csv("data/biketown/2018_07.csv", stringsAsFactors = F)
mean_by_plan <- bike_1807 %>%
group_by(PaymentPlan) %>%
summarize(mean_mi = mean(Distance_Miles))
plot1 <- ggplot(mean_by_plan, aes(PaymentPlan, mean_mi,
fill = PaymentPlan)) +
geom_bar(stat = "identity") +
labs(title = "Average Biketown Ride Distance by Payment Plan Type",
subtitle = "July 2018",
caption = "source: Biketown") +
xlab("Payment Plan") + ylab("Average Miles") +
theme_bw()
plot1
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(lubridate)
library(ggplot2)
install.packages("DT")
library(DT)
install.packages("DT")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(lubridate)
library(ggplot2)
install.packages("DT")
library(DT)
str(bike_1807)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(lubridate)
library(ggplot2)
bike_1807 <- read.csv("data/biketown/2018_07.csv", stringsAsFactors = F)
mean_by_plan <- bike_1807 %>%
group_by(PaymentPlan) %>%
summarize(mean_mi = mean(Distance_Miles))
plot1 <- ggplot(mean_by_plan, aes(PaymentPlan, mean_mi,
fill = PaymentPlan)) +
geom_bar(stat = "identity") +
labs(title = "Average Biketown Ride Distance by Payment Plan Type",
subtitle = "July 2018",
caption = "source: Biketown") +
xlab("Payment Plan") + ylab("Average Miles") +
theme_bw()
plot1
mean_by <- bike_1807 %>%
group_by(PaymentPlan, MultipleRental) %>%
summarize(mean_mi2 = mean(Distance_Miles))
plot2 <- ggplot(mean_by, aes(PaymentPlan, mean_mi2,
fill = PaymentPlan)) +
geom_bar(stat = "identity") +
labs(title = "Average Biketown Ride Distance by Payment Plan Type",
subtitle = "July 2018",
caption = "source: Biketown") +
xlab("Payment Plan") + ylab("Average Miles") +
theme_bw()
plot2
bike_1807 <- read.csv("data/biketown/2018_07.csv", stringsAsFactors = F)
mean_by_plan <- bike_1807 %>%
group_by(PaymentPlan) %>%
summarize(mean_mi = mean(Distance_Miles))
plot1 <- ggplot(mean_by_plan, aes(PaymentPlan, mean_mi,
fill = PaymentPlan)) +
geom_bar(stat = "identity") +
labs(title = "Average Biketown Ride Distance by Payment Plan Type",
subtitle = "July 2018",
caption = "source: Biketown") +
xlab("Payment Plan") + ylab("Average Miles") +
theme_bw()
plot1
mean_by <- bike_1807 %>%
group_by(PaymentPlan, MultipleRental) %>%
summarize(mean_mi2 = mean(Distance_Miles))
plot2 <- ggplot(mean_by, aes(PaymentPlan, mean_mi2,
group_by(multipleRental),
fill = PaymentPlan)) +
geom_bar(stat = "identity") +
labs(title = "Average Biketown Ride Distance by Payment Plan Type",
subtitle = "July 2018",
caption = "source: Biketown") +
xlab("Payment Plan") + ylab("Average Miles") +
theme_bw()
plot2
bike_1807 <- read.csv("data/biketown/2018_07.csv", stringsAsFactors = F)
mean_by_plan <- bike_1807 %>%
group_by(PaymentPlan) %>%
summarize(mean_mi = mean(Distance_Miles))
plot1 <- ggplot(mean_by_plan, aes(PaymentPlan, mean_mi,
fill = PaymentPlan)) +
geom_bar(stat = "identity") +
labs(title = "Average Biketown Ride Distance by Payment Plan Type",
subtitle = "July 2018",
caption = "source: Biketown") +
xlab("Payment Plan") + ylab("Average Miles") +
theme_bw()
plot1
mean_by <- bike_1807 %>%
group_by(PaymentPlan, MultipleRental) %>%
summarize(mean_mi2 = mean(Distance_Miles))
plot2 <- ggplot(mean_by, aes(PaymentPlan, mean_mi2,
group_by(MultipleRental),
fill = PaymentPlan)) +
geom_bar(stat = "identity") +
labs(title = "Average Biketown Ride Distance by Payment Plan Type Breakout",
subtitle = "July 2018",
caption = "source: Biketown") +
xlab("Payment Plan") + ylab("Average Miles") +
theme_bw()
plot2
View(mean_by)
View(mean_by)
bike_1807 <- read.csv("data/biketown/2018_07.csv", stringsAsFactors = F)
mean_by_plan <- bike_1807 %>%
group_by(PaymentPlan) %>%
summarize(mean_mi = mean(Distance_Miles))
plot1 <- ggplot(mean_by_plan, aes(PaymentPlan, mean_mi,
fill = PaymentPlan)) +
geom_bar(stat = "identity") +
labs(title = "Average Biketown Ride Distance by Payment Plan Type",
subtitle = "July 2018",
caption = "source: Biketown") +
xlab("Payment Plan") + ylab("Average Miles") +
theme_bw()
plot1
mean_by <- bike_1807 %>%
group_by(PaymentPlan, MultipleRental) %>%
summarize(mean_mi2 = mean(Distance_Miles))
plot2 <- ggplot(mean_by, aes(PaymentPlan, mean_mi2,
group_by(MultipleRental),
fill = MultipleRental)) +
geom_bar(stat = "identity") +
labs(title = "Average Biketown Ride Distance by Payment Plan Type Breakout",
subtitle = "July 2018",
caption = "source: Biketown") +
xlab("Payment Plan") + ylab("Average Miles") +
theme_bw()
plot2
View(mean_by)
View(mean_by)
library(lubridate)
library(dplyr)
library(ggplot2)
source("code/fetch_biketown.R")
source("code/fetch_biketown.R")
get_data(start = "06/2018", end = "09/2018")
source("code/fetch_biketown.R")
get_data(start = "06/2018", end = "09/2018")
setwd("Users/lslawsk/Documents/RTraining/datascience2019/data/biketown")
setwd("/Users/lslawsk/Documents/RTraining/datascience2019/data/biketown")
folder <- "/Users/lslawsk/Documents/RTraining/datascience2019/data/biketown"
filenames <- list.files(path = folder, pattern = ".csv", all.files = FALSE,
full.names = FALSE,
recursive = FALSE, ignore.case = FALSE)
read_csv_filename <- function(filenames){
ret <- read.csv(filenames, stringAsFactors = F,
strip.white = T, na.strings = "")
ret$Source <- filenames
ret
}
bike_raw <- plyr::ldply(filenames, red_csv_filename)
bike_raw <- plyr::ldply(filenames, read_csv_filename)
folder <- "/Users/lslawsk/Documents/RTraining/datascience2019/data/biketown"
filenames <- list.files(path = folder, pattern = ".csv", all.files = FALSE,
full.names = FALSE,
recursive = FALSE, ignore.case = FALSE)
read_csv_filename <- function(filenames){
ret <- read.csv(filenames, stringAsFactors = F,
strip.white = T, na.strings = "")
ret$Source <- filenames
ret
}
bike_raw <- plyr::ldply(filenames, read_csv_filename)
folder <- "/Users/lslawsk/Documents/RTraining/datascience2019/data/biketown"
filenames <- list.files(path = folder, pattern = ".csv", all.files = FALSE,
full.names = FALSE,
recursive = FALSE, ignore.case = FALSE)
read_csv_filename <- function(filenames){
ret <- read.csv(filenames, stringsAsFactors = F,
strip.white = T, na.strings = "")
ret$Source <- filenames
ret
}
bike_raw <- plyr::ldply(filenames, read_csv_filename)
setwd("/Users/lslawsk/Documents/RTraining/datascience2019/data/biketown/")
folder <- "/Users/lslawsk/Documents/RTraining/datascience2019/data/biketown/"
filenames <- list.files(path = folder, pattern = ".csv", all.files = FALSE,
full.names = FALSE,
recursive = FALSE, ignore.case = FALSE)
read_csv_filename <- function(filenames){
ret <- read.csv(filenames, stringsAsFactors = F,
strip.white = T, na.strings = "")
ret$Source <- filenames
ret
}
bike_raw <- plyr::ldply(filenames, read_csv_filename)
bike_dfl <- bike_raw %>%
mutate(start.datetime = paste(StartDate, StartTime, sep = " "),
end.datetime = paste(EndDate, EndTime, sep = " ")
mutate(start.datetime = paste(StartDate, StartTime, sep = " "),
bike_dfl <- bike_raw %>%
mutate(start.datetime = paste(StartDate, StartTime, sep = " "),
end.datetime = paste(EndDate, EndTime, sep = " "))
str(bike_dfl)
# convert chr format of last 2 columns to date-time format
# !!!!make sure to include timezone!!!!
# check acceptable timezone values
OlsonNames()
bike_df1 <- bike_raw %>%
mutate(start.datetime = paste(StartDate, StartTime, sep = " "),
end.datetime = paste(EndDate, EndTime, sep = " "))
str(bike_df1)
bike_df1$start.datetime <- mdy_hm(bike_df1$start.datetime)
bike_df1$end.datetime <- mdy_hm(bike_df1$end.datetime)
str(bike_df1)
rm(bike_dfl)
# convert duration into usable format
bike_df1$Duration <- hms(bike_df1$Duration)
# error thrown after convert indicating NAs; check raw data
sum(is.na(bike_df1$Duration))
View(bike_df1)
View(bike_df1)
bike_df1$interval <- interval(bike_df1$start.datetime, bike_df1$end.datetime)
head(bike_df1$interval)
bike_df1 <- bike_raw %>%
mutate(start.datetime = paste(StartDate, StartTime, sep = " "),
end.datetime = paste(EndDate, EndTime, sep = " "))
bike_df1$start.datetime <- mdy_hm(bike_df1$start.datetime,
tz = "America/Los_Angeles")
bike_df1$end.datetime <- mdy_hm(bike_df1$end.datetime,
tz = "America/Los_Angeles")
bike_df1$interval <- interval(bike_df1$start.datetime, bike_df1$end.datetime)
head(bike_df1$interval)
str(bike_df1)
# convert duration into usable format
bike_df1$Duration <- hms(bike_df1$Duration)
# error thrown after convert indicating NAs; check raw data
sum(is.na(bike_df1$Duration))
bike_df1$interval <- interval(bike_df1$start.datetime, bike_df1$end.datetime)
head(bike_df1$interval)
# calculate duration. Must convert to interval first
bike_df1$duration.all <- as.duration(bike_df1$interval)
head(bike_df1$duration.all)
View(bike_df1)
View(bike_df1)
bike_df1$period <- as.period(bike_df1$duration.all)
head(bike_df1$period)
# floor_date() is helpful for aggregating
bike_wkagg <- bike_df1 %>%
mutate(week.datetime = floor_date(start.datetime, unit = "week"))
head(bike_wkagg$week.datetime)
mean_wkdist <- bike_wkagg %>%
group_by(week.datetime) %>%
summarize(mean_dist = mean(Distance_Miles))
plot1 <- ggplot(mean_wkdist, aes(week.datetime, mean_dist,
fill = week.datetime)) +
geom_bar(stat = "identity") +
labs(title = "Average Biketown Ride Distance by Week",
subtitle = "July 2018",
caption = "source: Biketown") +
xlab("Week Of") + ylab("Average Miles") +
theme_bw()
plot1
View(bike_wkagg)
View(bike_wkagg)
mean_wkdist <- bike_wkagg %>%
filter(Source %in% c("2018_06.csv")) %>%
group_by(week.datetime) %>%
summarize(mean_dist = mean(Distance_Miles))
plot1 <- ggplot(mean_wkdist, aes(week.datetime, mean_dist,
fill = week.datetime)) +
geom_bar(stat = "identity") +
labs(title = "Average Biketown Ride Distance by Week",
subtitle = "July 2018",
caption = "source: Biketown") +
xlab("Week Of") + ylab("Average Miles") +
theme_bw()
plot1
mean_wkdist <- bike_wkagg %>%
filter(Source %in% c("2018_06.csv")) %>%
group_by(week.datetime) %>%
summarize(wk_mean_dist = mean(Distance_Miles))
plot1 <- ggplot(mean_wkdist, aes(week.datetime, wk_mean_dist,
fill = week.datetime)) +
geom_bar(stat = "identity") +
labs(title = "Average Biketown Ride Distance by Week",
subtitle = "July 2018",
caption = "source: Biketown") +
xlab("Week Of") + ylab("Average Miles") +
theme_bw()
plot1
plot1 <- ggplot(mean_wkdist, aes(week.datetime, wk_mean_dist)) +
geom_bar(stat = "identity") +
labs(title = "Average Biketown Ride Distance by Week",
subtitle = "July 2018",
caption = "source: Biketown") +
xlab("Week Of") + ylab("Average Miles") +
theme_bw()
plot1
plot1 <- ggplot(mean_wkdist, aes(week.datetime, wk_mean_dist)) +
geom_bar(stat = "identity") +
labs(title = "Average Biketown Ride Distance by Week",
subtitle = "July 2018",
caption = "source: Biketown") +
xlab("Week Of") + ylab("Average Miles") +
scale_fill_manual("legend", values = "blue") +
theme_bw()
plot1
plot1 <- ggplot(mean_wkdist, aes(week.datetime, wk_mean_dist)) +
geom_bar(stat = "identity", fill = "blue") +
labs(title = "Average Biketown Ride Distance by Week",
subtitle = "July 2018",
caption = "source: Biketown") +
xlab("Week Of") + ylab("Average Miles") +
scale_x_date(date_breaks = "1 week") +
theme_bw()
plot1
plot1 <- ggplot(mean_wkdist, aes(week.datetime, wk_mean_dist)) +
geom_bar(stat = "identity", fill = "blue") +
labs(title = "Average Biketown Ride Distance by Week",
subtitle = "July 2018",
caption = "source: Biketown") +
xlab("Week Of") + ylab("Average Miles") +
scale_x_date(date_breaks = "1 week") +
theme_bw()
plot1
plot1 <- ggplot(mean_wkdist, aes(week.datetime, wk_mean_dist)) +
geom_bar(stat = "identity", fill = "blue") +
labs(title = "Average Biketown Ride Distance by Week",
subtitle = "July 2018",
caption = "source: Biketown") +
ylab("Average Miles") +
scale_x_date(date_breaks = "1 week") +
plot1
plot1 <- ggplot(mean_wkdist, aes(week.datetime, wk_mean_dist)) +
geom_bar(stat = "identity", fill = "blue") +
labs(title = "Average Biketown Ride Distance by Week",
subtitle = "July 2018",
caption = "source: Biketown") +
scale_x_date(date_breaks = "1 week") +
plot1
plot1 <- ggplot(mean_wkdist, aes(week.datetime, wk_mean_dist)) +
geom_bar(stat = "identity", fill = "blue") +
labs(title = "Average Biketown Ride Distance by Week",
subtitle = "July 2018",
caption = "source: Biketown") +
xlab("Week Of") + ylab("Average Miles") +
theme_bw()
plot1
plot1 <- ggplot(mean_wkdist, aes(week.datetime, wk_mean_dist)) +
geom_bar(stat = "identity", fill = "blue") +
labs(title = "Average Biketown Ride Distance by Week",
subtitle = "July 2018",
caption = "source: Biketown") +
scale_x_date(date_breaks = "1 week") +
theme_bw()
plot1
plot1 <- ggplot(mean_wkdist, aes(week.datetime, wk_mean_dist)) +
geom_bar(stat = "identity", fill = "blue") +
labs(title = "Average Biketown Ride Distance by Week",
subtitle = "July 2018",
caption = "source: Biketown") +
scale_x_date(date_breaks = "1 week") +
plot1
plot1 <- ggplot(mean_wkdist, aes(week.datetime, wk_mean_dist)) +
geom_bar(stat = "identity", fill = "blue") +
labs(title = "Average Biketown Ride Distance by Week",
subtitle = "July 2018",
caption = "source: Biketown") +
xlab("Week Of") + ylab("Average Miles") +
theme_bw()
plot1
plot1 <- ggplot(mean_wkdist, aes(as.Date(week.datetime), wk_mean_dist)) +
geom_bar(stat = "identity", fill = "blue") +
labs(title = "Average Biketown Ride Distance by Week",
subtitle = "July 2018",
caption = "source: Biketown") +
xlab("Week Of") + ylab("Average Miles") +
theme_bw()
plot1
plot1 <- ggplot(mean_wkdist, aes(as.Date(week.datetime), wk_mean_dist)) +
geom_bar(stat = "identity", fill = "blue") +
labs(title = "Average Biketown Ride Distance by Week",
subtitle = "July 2018",
caption = "source: Biketown") +
xlab("Week Of") + ylab("Average Miles") +
scale_x_date(date_breaks = "1 week") +
theme_bw()
plot1
plot1 <- ggplot(mean_wkdist, aes(as.Date(week.datetime), wk_mean_dist)) +
geom_bar(stat = "identity", fill = "orange") +
labs(title = "Average Biketown Ride Distance by Week",
subtitle = "July 2018",
caption = "source: Biketown") +
xlab("Week Of") + ylab("Average Miles") +
scale_x_date(date_breaks = "1 week") +
theme_bw()
plot1
mean_wkdist <- bike_wkagg %>%
filter(Source %in% c("2018_06.csv","2018_07.csv","2018_08.csv","2018_09.csv")) %>%
group_by(week.datetime) %>%
summarize(wk_mean_dist = mean(Distance_Miles))
plot1 <- ggplot(mean_wkdist, aes(as.Date(week.datetime), wk_mean_dist)) +
geom_bar(stat = "identity", fill = "orange") +
labs(title = "Average Biketown Ride Distance by Week",
subtitle = "July-Sept 2018",
caption = "source: Biketown") +
xlab("Week Of") + ylab("Average Miles") +
scale_x_date(date_breaks = "1 week") +
theme_bw()
plot1
plot1 <- ggplot(mean_wkdist, aes(as.Date(week.datetime), wk_mean_dist)) +
geom_bar(stat = "identity", fill = "orange") +
labs(title = "Average Biketown Ride Distance by Week",
subtitle = "July-Sept 2018",
caption = "source: Biketown") +
xlab("Week Of") + ylab("Average Miles") +
scale_x_date(date_breaks = "1 week") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme_bw()
plot1
plot1 <- ggplot(mean_wkdist, aes(as.Date(week.datetime), wk_mean_dist)) +
geom_bar(stat = "identity", fill = "orange") +
labs(title = "Average Biketown Ride Distance by Week",
subtitle = "July-Sept 2018",
caption = "source: Biketown") +
xlab("Week Of") + ylab("Average Miles") +
scale_x_date(date_breaks = "1 week") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme_bw()
plot1
plot1 <- ggplot(mean_wkdist, aes(as.Date(week.datetime), wk_mean_dist)) +
geom_bar(stat = "identity", fill = "orange") +
labs(title = "Average Biketown Ride Distance by Week",
subtitle = "July-Sept 2018",
caption = "source: Biketown") +
xlab("Week Of") + ylab("Average Miles") +
scale_x_date(date_breaks = "1 week") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme_bw()
plot1
